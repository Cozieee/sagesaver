# [ ] Secrets Manager Password
# TODO Parameters for EFS attach, Inactivity, Collaborative, Jupyter or Lab
AWSTemplateFormatVersion: 2010-09-09
Parameters:
    EnvStack:
        Type: String
        Description: Name of the SageSaver environment stack this notebook will
            be attached to. You can create a new one from the GitHub README step 1.
    NBInstanceType:
        Type: String
        Description:
            "Type of EC2 instance to launch. Suggestions - Micro: testing |
            C5: Analysis | R5: Large Data | g4dn: ML Small-Scale | p3: ML Large-Scale"
        Default: c5.large
        AllowedValues:
            - t2.micro
            - t3.micro
            - c5.large
            - c5.xlarge
            - c5.2xlarge
            - c5.4xlarge
            - c5.9xlarge
            - r5.large
            - r5.xlarge
            - r5.2xlarge
            - r5.4xlarge
            - r5.8xlarge
            - g4dn.xlarge
            - g4dn.2xlarge
            - g4dn.4xlarge
            - g4dn.8xlarge
            - p3.2xlarge
            - p3.8xlarge
    NBKeyPair:
        Type: AWS::EC2::KeyPair::KeyName
        Description: Keypair used to ssh into Notebook Server
        AllowedPattern: .+
        ConstraintDescription: is required
    NBName:
        Type: String
        Description: Purpose of the notebook (i.e. 'General', 'Training', 'Analysis', etc.)
    NBPassword:
        Type: String
        Description: Password used to login to Jupyter Notebook
        MinLength: 8
        MaxLength: 40
        AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+*!=]).*$
        ConstraintDescription: must be 8 characters with 1 lowercase, 1 uppercase, and 1 special
        NoEcho: true
    NBInactiveLimit:
        Type: Number
        Description: Minutes notebook can be inactive (no files ran/saved/edited) before shutting down
        Default: 30
        MinValue: 5
        MaxValue: 1440
    Linux2AMI:
        Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
        Description: Don't edit this value
        Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        AllowedValues:
            - "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    DevKey:
        Type: String
        Description: Should be empty, unless you're a dev
        Default: ""
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            - Label:
                  default: Environment
              Parameters:
                  - EnvStack
            - Label:
                  default: Notebook
              Parameters:
                  - NBName
                  - NBInstanceType
                  - NBKeyPair
                  - NBPassword
            - Label:
                  default: Enforced Configurations [DO NOT CHANGE]
              Parameters:
                  - Linux2AMI
        ParameterLabels:
            EnvStack:
                default: Stack name
            NBInstanceType:
                default: EC2 Instance Type
            NBKeyPair:
                default: EC2 Key Pair
            NBName:
                default: Notebook Name
            NBPassword:
                default: Jupyter Password
            Linux2AMI:
                default: EC2 Instance Base AMI
Mappings:
    Template:
        UserData:
            OnBoot: |
                Content-Type: multipart/mixed; boundary="//"
                MIME-Version: 1.0
                --//
                Content-Type: text/cloud-config; charset="us-ascii"
                MIME-Version: 1.0
                Content-Transfer-Encoding: 7bit
                Content-Disposition: attachment; filename="cloud-config.txt"

                #cloud-config
                cloud_final_modules:
                - [scripts-user, always]

                --//
                Content-Type: text/x-shellscript; charset="us-ascii"
                MIME-Version: 1.0
                Content-Transfer-Encoding: 7bit
                Content-Disposition: attachment; filename="userdata.txt"
Conditions:
    IsDev: !Equals [!Ref DevKey, sagesaverFTW789]
Resources:
    NBInstance:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: !Ref Linux2AMI
            KeyName: !Ref NBKeyPair
            InstanceType: !Ref NBInstanceType
            IamInstanceProfile:
                Fn::ImportValue: !Sub ${EnvStack}-NotebookProfileName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  GroupSet:
                      - Fn::ImportValue: !Sub ${EnvStack}-NotebookGroupID
                  SubnetId:
                      Fn::ImportValue: !Sub ${EnvStack}-PublicSubnetID
            UserData:
                Fn::Base64: !Sub
                    - |
                        ${OnBootPrefix}
                        #!/bin/bash
                        /opt/aws/bin/cfn-init \
                            --region ${AWS::Region} \
                            -s ${AWS::StackName} \
                            -r NBInstance \
                            -c ${ConfigSet}
                        --//
                    - OnBootPrefix: !FindInMap [Template, UserData, OnBoot]
                      ConfigSet: !If [IsDev, Dev, Prod]
            Tags:
                - Key: Name
                  Value: !Ref NBName
        Metadata:
            AWS::CloudFormation::Init:
                Init:
                    packages:
                        yum:
                            git: []
                            amazon-efs-utils: []
                            jq: []
                    files:
                        /etc/sagesaver.conf:
                            content: !Sub
                                - |
                                    {
                                        "sagesaver": {
                                            "log_dir": "/var/log/sagesaver",
                                            "tmp_dir": "/var/tmp/sagesaver"
                                        },
                                        "environment": {
                                            "stack_name": "${EnvStack}"
                                        },
                                        "server": {
                                            "type": "notebook",
                                            "log_time_format": "%Y-%m-%d %H:%M:%S"
                                            "idle_time_limit": 1800
                                        },
                                        "jupyter": {
                                            "config_time_format": "%Y-%m-%d %H:%M:%S"
                                            "log_path": /var/log/sagesaver/jupyter.log
                                        }
                                    }
                                - DatabaseID:
                                      Fn::ImportValue: !Sub ${EnvStack}-DatabaseID
                    commands:
                        0_SetupDirs:
                            command: |
                                mkdir /home/ec2-user/efs /var/sagesaver
                                chmod go+rw /home/ec2-user/efs
                        1_SetupServerEnvironment:
                            command: !Sub 
                                - |
                                    git clone https://github.com/Cozieee/sagesaver sagesaver-gh
                                    bash sagesaver-gh/envs/setup.sh -s 'notebook' -p '${NBPassword}' ${DevFlag}
                                    rm -rf sagesaver-gh
                                - DevFlag: !If [IsDev, "-d", ""]
                            cwd: /root
                CheckedInit:
                    commands: 
                        0_Init:
                            command: /opt/aws/bin/cfn-init -v /var/lib/cfn-init/data/metadata.json -c Init
                            test: test ! -e /etc/sagesaver.conf
                            cwd: /root
                LoadEFS:
                    command:
                        0_MountEFS:
                            command:
                                Fn::Sub:
                                    - mount -t efs ${EFSID} /home/ec2-user/efs
                                    - EFSID:
                                          Fn::ImportValue: !Sub ${EnvStack}-EFSID
                        1_LoadTutorial:
                            command: !Sub
                                - |
                                    git clone https://github.com/Cozieee/sagesaver sagesaver-gh
                                    mv sagesaver-gh/tutorials/db-connect/${DatabaseType}Example.ipynb efs/
                                    rm -rf sagesaver-gh
                                - DatabaseType:
                                      Fn::ImportValue: !Sub ${EnvStack}-DatabaseType
                            test: test -z "$(ls -A efs)"
                            cwd: /home/ec2-user
                Activate:
                    commands:
                        2_StartCron:
                            command: sagesaver notebook activate
                            cwd: /root/sagesaver
                configSets:
                    Init:
                        - Init
                    Dev:
                        - CheckedInit
                        - LoadEFS
                    Prod:
                        - CheckedInit
                        - LoadEFS
                        - Activate
    