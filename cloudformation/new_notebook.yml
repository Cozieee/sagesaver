# TODO Copy changes from environment
# TODO Parameters for EFS attach, Inactivity, Collaborative, Jupyter or Lab
# Mapping for directory paths
AWSTemplateFormatVersion: 2010-09-09
Parameters:
    ENVStack:
        Type: String
        Description: Name of the SageSaver environment stack this notebook will
            be attached to. Create a new one from the GitHub README
    NBInstanceType:
        Type: String
        Description:
            "Type of EC2 instance to launch. Suggestions - Micro: testing |
            C5: Analysis | R5: Large Data | g4dn: ML Small-Scale | p3: ML Large-Scale"
        Default: c5.large
        AllowedValues:
            - t2.micro
            - t3.micro
            - c5.large
            - c5.xlarge
            - c5.2xlarge
            - c5.4xlarge
            - c5.9xlarge
            - r5.large
            - r5.xlarge
            - r5.2xlarge
            - r5.4xlarge
            - r5.8xlarge
            - g4dn.xlarge
            - g4dn.2xlarge
            - g4dn.4xlarge
            - g4dn.8xlarge
            - p3.2xlarge
            - p3.8xlarge
    NBKeyPair:
        Type: AWS::EC2::KeyPair::KeyName
        Description: Keypair used to ssh into Notebook Server
        AllowedPattern: .+
        ConstraintDescription: is required
    NBName:
        Type: String
        Description: Name of the notebook (i.e. 'General', 'Training', 'Analysis', etc.)
    NBPassword:
        Type: String
        Default: Qw3rty11
        MinLength: 8
        MaxLength: 40
        AllowedPattern: ^[a-zA-Z0-9]*$
        ConstraintDescription: has invalid length or characters
        NoEcho: true
    Linux2AMI:
        Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
        Description: Don't edit this value
        Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        AllowedValues:
            - "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            - Label:
                  default: Environment
              Parameters:
                  - ENVStack
            - Label:
                  default: Notebook
              Parameters:
                  - NBInstanceType
                  - NBKeyPair
        ParameterLabels:
            ENVStack:
                default: Stack Name
Mappings:
    Template:
        UserData:
            OnBoot: |
                Content-Type: multipart/mixed; boundary="//"
                MIME-Version: 1.0
                --//
                Content-Type: text/cloud-config; charset="us-ascii"
                MIME-Version: 1.0
                Content-Transfer-Encoding: 7bit
                Content-Disposition: attachment; filename="cloud-config.txt"

                #cloud-config
                cloud_final_modules:
                - [scripts-user, always]

                --//
                Content-Type: text/x-shellscript; charset="us-ascii"
                MIME-Version: 1.0
                Content-Transfer-Encoding: 7bit
                Content-Disposition: attachment; filename="userdata.txt"
Resources:
    NBServer:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: !Ref Linux2AMI
            KeyName: NBKeyPair
            InstanceType: t2.micro
            IamInstanceProfile: !Ref NBRole
            NetworkInterface:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  GroupSet:
                      - Fn::ImportValue: !Sub ${EnvironmentStack}-NotebookGroupID
                  SubnetId:
                      Fn::ImportValue: !Sub ${EnvironmentStack}-PublicSubnetID
            UserData:
                Fn::Base64:
                    Fn::Sub:
                        - |
                            ${OnBootPrefix}
                            #!/bin/bash
                            /opt/aws/bin/cfn-init \
                                --region ${AWS::Region} \
                                -s ${AWS::StackName} \
                                -r NotebookInstance \
                                -c Boot
                            --//
                        - OnBootPrefix: !FindInMap [Template, UserData, OnBoot]
            Tags:
                - Key: Name
                  Value: !Ref NBName
                - Key: sagesaver:stack-origin
                  Value: !Ref AWS::StackName
                - Key: sagesaver:server-type
                  Value: Notebook
        Metadata:
            AWS::CloudFormation::Init:
                Init:
                    packages:
                        yum:
                            git: []
                            amazon-efs-utils: []
                    files:
                        /root/sagesaver/config.json:
                            content:
                                Fn::Sub:
                                    - |
                                        {
                                            "aws": {
                                                "region": "${AWS::Region}",
                                                "db-id": "${DatabaseID}",
                                            },
                                            "autostop": {
                                                "time_limit": 1800,
                                                "jupyter_log": {
                                                    "path": "/home/ec2-user/jupyter.log",
                                                    "time_format": "%Y-%m-%d %H:%M:%S"
                                                },
                                                "output": {
                                                    "time_format": "%Y-%m-%d %H:%M:%S"
                                                }
                                            }
                                        }
                                    - DatabaseID:
                                          Fn::ImportValue: !Sub ${EnvironmentStack}-DatabaseID
                    commands:
                        0_SetupEFSDir:
                            command: mkdir /home/ec2-user/efs
                                chmod go+rw /home/ec2-user/efs
                        1_SetupServerEnvironment:
                            command: !Sub |
                                git clone https://github.com/Cozieee/sagesaver sagesaver-gh
                                mv sagesaver-gh/notebook/src/* ./sagesaver
                                bash sagesaver-gh/notebook/env/setup.sh -p ${NBPassword}
                                rm -rf sagesaver-gh
                            cwd: /root
                EFSBoilerPlate:
                    command:
                        0_CopyConfig:
                            command: cp /root/sagesaver/config.json .
                            cwd: /hom/ec2-user
                        1_LoadBoilerPlate:
                            command:
                                git clone https://github.com/Cozieee/sagesaver sagesaver-gh
                                mv sagesaver-gh/notebook/efs/* efs/
                                mv sagesaver-gh/tools efs/
                                rm -rf sagesaver-gh
                            cwd: /home/ec2-user
                Boot:
                    commands:
                        0_CheckInitialized:
                            command: !Sub |
                                /opt/aws/bin/cfn-init \
                                    --region ${AWS::Region} \
                                    -s ${AWS::StackName} \
                                    -r NotebookInstance \
                                    -c Init
                            test: test ! -e sagesaver
                            cwd: /root
                        1_MountEFS:
                            command:
                                Fn::Sub:
                                    - mount -t efs ${EFSID} /home/ec2-user/efs
                                    - EFSID:
                                          Fn::ImportValue: !Sub ${EnvironmentStack}-EFSID
                        2_CheckEFSNotEmpty:
                            command: !Sub |
                                /opt/aws/bin/cfn-init \
                                    --region ${AWS::Region} \
                                    -s ${AWS::StackName} \
                                    -r NotebookInstance \
                                    -c EFSBoilerPlate
                            test: test -z "$(ls -A efs)"
                            cwd: /home/ec2-user
                        3_StartCron:
                            command: bash boot.sh -j /home/ec2-user/efs
                            cwd: /root/sagesaver
                configSets:
                    Init:
                        - Init
                    Boot:
                        - Boot
